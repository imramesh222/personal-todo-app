[loggers]
keys = root,botocore,shapely,matplotlib,kafka,filelock,h5py,tensorflow,pdfminer,pikepdf,quantulum3, multipart,tabula,urllib3,PIL,websockets

[handlers]
keys = file, console

[formatters]
keys = default

[logger_root]
level = DEBUG
handlers = file, console

[handler_console]
class = StreamHandler
level = DEBUG
formatter = default
args = (sys.stdout,)

[handler_file]
class = handlers.RotatingFileHandler
level = DEBUG
formatter = default
args = ("service.log","a",10000000,10,"utf-8")

[formatter_default]
format = %(asctime)s - %(name)s-%(threadName)-10s-%(levelname)s - %(message)s
datefmt =
class = logging.Formatter

[logger_botocore]
level = ERROR
qualname = botocore
handlers = file, console
propagate = 0

[logger_shapely]
level = ERROR
qualname = shapely
handlers = file, console
propagate = 0

[logger_boto]
level = CRITICAL
handlers = file, console

[logger_matplotlib]
level = CRITICAL
qualname = matplotlib
handlers = file, console

[logger_kafka]
level = CRITICAL
qualname = kafka
handlers = file, console

[logger_filelock]
level = CRITICAL
qualname = filelock
handlers = file, console

[logger_h5py]
level = CRITICAL
qualname = h5py
handlers = file, console

[logger_tensorflow]
level = CRITICAL
qualname = tensorflow
handlers = file, console

[logger_pdfminer]
level = CRITICAL
qualname = pdfminer
handlers = file, console

[logger_pikepdf]
level = CRITICAL
qualname = pikepdf
handlers = file, console

[logger_quantulum3]
qualname = quantulum3
level = ERROR
handlers = file, console

[logger_tabula]
qualname = tabula
level = ERROR
handlers = file, console

[logger_multipart]
qualname = multipart
level = ERROR
handlers = file, console

[logger_urllib3]
qualname = urllib3
level = ERROR
handlers = file, console

[logger_PIL]
qualname = PIL
level = ERROR
handlers = file, console

[logger_websockets]
qualname = websockets
level = ERROR
handlers = file, console
